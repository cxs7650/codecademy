import codecademylib
import pandas as pd

visits = pd.read_csv('visits.csv',
                     parse_dates=[1])
cart = pd.read_csv('cart.csv',
                   parse_dates=[1])
checkout = pd.read_csv('checkout.csv',
                       parse_dates=[1])
purchase = pd.read_csv('purchase.csv',
                       parse_dates=[1])
#1
print(visits.head())
print(cart.head())
print(checkout.head())
print(purchase.head())

#2 left merge visits and cart
v_c=pd.merge(visits, cart, how='left')
print(v_c)

#3 how long is the DF
#its 2052 rows x 3 columns
#print(len(v_c)) one way to get the len
print(len(v_c))

#4  null timestamps
#1652 is null
#cart_time_null=v_c.cart_time.isnull().sum()
cart_time_null=len(v_c[v_c.cart_time.isnull()])
print(cart_time_null)

# 5
#80.50%
print(float(cart_time_null)/float(len(v_c)))

#6 left merge for cart & c/o
c_co=pd.merge(cart, checkout, how='left')
print(c_co)
# is null (602)
print(len(c_co))
#checkout_time_null=c_co.cart_time.isnull().sum()
checkout_time_null=len(c_co[c_co.checkout_time.isnull()])
print(checkout_time_null)
#percentage (20.93%)
print(float(checkout_time_null)/float(len(c_co)))

#7 merge all
all_data=visits.merge(cart, how='left')\
								.merge(checkout, how='left')\
  							.merge(purchase, how='left')
    
print(all_data.head())

#8
print(len(all_data))
#c/o but did not purchase
checkout_not_purchase = all_data[(all_data.purchase_time.isnull()) & (~all_data.checkout_time.isnull())]

print(checkout_not_purchase)#120

# number of rows where they reached c/o
reached_checkout = all_data[~all_data.checkout_time.isnull()]
print(reached_checkout)#816

print(float(len(checkout_not_purchase)) / float(len(reached_checkout))) #14.70% proceeded to c/o but did not purchase
#another way to do step 8
#`num_checkouts = len(all_data[all_data.checkout_time.notnull()])`
#num_purchases = len(all_data[all_data.purchase_time.notnull()])`
#`num_no_purchase = num_checkouts-num_purchases`
#`print(num_no_purchase)`
#`print(num_no_purchase / float(num_checkouts)) # Percent checkout, but not purchasing`


#9
#time has the highest %

#10
all_data['time_to_purchase'] = \
    all_data.purchase_time - \
    all_data.visit_time
    
#11  2594
print(all_data.time_to_purchase)

#12
print(all_data.time_to_purchase.mean())
